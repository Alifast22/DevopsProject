trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '3d847cce-1bca-4c84-bb97-65a1fa860463'
  imageRepository: 'devopsmovieproject'
  containerRegistry: 'movieproject.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'  # Ensure this version matches your project requirements

    - script: |
        npm install
      displayName: 'Install dependencies'

    - script: |
        npm run build
      displayName: 'Build the project'
      env:
        NODE_OPTIONS: '--openssl-legacy-provider'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Sonarcloud'
        organization: 'k200334'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'k200334_DevopsProject.git'
        cliProjectName: 'DevopsProject.git'
        cliSources: 'src'

    - script: |
        npx sonar-scanner \
          -Dsonar.projectKey=k200334_DevopsProject.git \
          -Dsonar.organization=k200334 \
          -Dsonar.sources=src \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$(SONAR_TOKEN)
      displayName: 'Run SonarCloud analysis'
      env:
        SONAR_TOKEN: $(SONAR_TOKEN)

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - script: |
        git config --global user.name "azure-pipelines"
        git config --global user.email "azure-pipelines@azure.com"

        if git ls-remote --exit-code azure; then
          echo "Azure remote already exists"
        else
          echo "Adding Azure remote"
          git remote add azure https://$(System.AccessToken)@dev.azure.com/k200334/DevopsProject/_git/DevopsProject
        fi

        git fetch azure || echo "Fetching from Azure remote failed"
        git push azure HEAD:main --force || echo "Pushing to Azure remote failed"
      displayName: 'Sync changes to Azure Repos'
      env:
        System.AccessToken: $(System.AccessToken)
